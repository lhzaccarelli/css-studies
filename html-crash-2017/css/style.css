/* Reset */
* { /* * is everything */
    margin: 0;
    padding: 0;
}

body {
    background-color: #f4f4f4;
    color: rgb(30, 30, 30);

    font-family: Arial, Helvetica, sans-serif;
    font-size: 14px;
    font-weight: normal;
    /* Same as above */
    font: normal 14px Arial, Helvetica, sans-serif;

    line-height: 1.6em;

    margin: 0;
}

.container {
    width: 80%; /* porcentagem é responsiva */
    margin: auto; /* Seta uma margem automática em cada lado */
}

.button {
    background-color: #333;
    color: #fff !important;
    padding: 10px 15px;
    border: none;
}

.button:hover {
    background: #555;
    color: #eee !important;
}

.clr {
    clear: both;
}

.box-1 {
    background-color: #333;
    color: #fff;
    border: 2px #afafff solid; /* width, color, style */
    border-width: 2px;
    border-style: solid;
    border-color: #afafff;

    border-top-style: dotted;

    padding-top: 20px;

    padding: 20px 10px 10px 10px;

    margin: 20px 0px;
}

.box-1 h1 {
    font-family: Tahoma, sans-serif;
    font-weight: 800;
    font-style: italice;
    text-decoration: underline;
    text-transform: uppercase;
    letter-spacing: 0.2em;
    word-spacing: 1em;
}

.box-2 {
    border: 3px dotted #ccc;
    padding: 20px;
    margin: 20px 0;
}

a {
    text-decoration: none;
    color: #000;
}

a:hover {
    color: #ff0000;
}

a:active {
    color: #990000;
}

a:visited {
    color: #ff3300;
}

.categories {
    border: 1px #ccc solid;
    padding: 10px;
    border-radius: 15px;
}

.categories h2 {
    text-align: center;
}

.categories ul {
    padding: 0;
    list-style: none;
}

.categories li {
    padding-bottom: 6px;
    border-bottom: dotted 1px #333;
    /* list-style-image: url('../images/check.png'); */
}

.margins {
    margin: 5px 10px; /* Top & bottom; Right & left */
    margin: 5px 10px 5px 10px; /* Top, right, bottom, left (Clock) */
}

.my-form {
    padding: 20px;
}

.my-form .form-group {
    padding-bottom: 20px;
}

.my-form label {
    display: block;
}

.my-form input[type="text"], 
.my-form input[type="email"], 
.my-form textarea {
    padding: 8px;
    width: 100%;
}

.block {
    float: left;
    width: 33.3%;
    border: 1px solid #ccc;
    padding: 10px;

    /* Pega o padding, border, margin e adiciona no tamanho do width */
    box-sizing: border-box; 
}

#main-block {
    float: left;
    width: 70%;
    padding: 15px;
    box-sizing: border-box;
}

#sidebar {
    float: right;
    width: 30%;
    background-color: #333;
    color: #fff;
    padding: 15px;
    box-sizing: border-box;
}

/* Positioning
- static: The default. Se não for informada nenhuma posição, ele renderiza o elemento de acordo com o "flow" do documento
- relative: O elemento será posicionado de forma relativa à sua posição normal.
- absolute: Pode posicionar em qualquer posição dentro de um elementro relativo.
- fixed: É uma posição fixa em relação ao browser.
- initial: Seta a propriedade para o seu valor default.
- inherit: Herda a propriedade de seu elemento pai.
*/

.p-box {
    margin: 30px 0;
    width: 600px;
    height: 500px;
    border: 1px solid #000;
}

/** Exemplo: Neste caso, o H1 vai para o topo da tela, pois
    a referência é o elemento relativo em que ele está, se o p-box for
    relativo, ele é posicionado dentro da p-box, se não, é posicionado no
    topo do documento */
.p-box {
    position: relative;
}
.p-box h1 {
    position: absolute;
    top:100px;
}
.p-box h2 {
    position: absolute;
    bottom: 40px;
    right: 50px;
}


.fix-me {
    position: fixed;
    top: 400px;
    left: 0px;
}

.p-box {
    background-image: url('../images/bg.jpg');
    background-repeat: no-repeat;
    background-position: 100px 200px; /* Posição absoluta */
    background-position: center top;
}


/* Pseudo-elements */
.my-list li:first-child {
    background: red;
}

.my-list li:nth-child(5) {
    background: pink;
}

.my-list li:hover {
    background: green;
}

.my-list li:nth-child(even) {
    background: grey;
}